# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose


version: '3.8'

services:

  rabbit-sequoia-management:
    build:
      context: .
      dockerfile: ./rabbit-mq/Dockerfile
    container_name: rabbitmq
    ports:
      - "15672:15672"  # Management UI: http://localhost:15672
      - "5672:5672"  # RabbitMQ message broker
    networks:
      - app-network
    healthcheck:
        test: ["CMD", "rabbitmqctl", "status"]
        interval: 30s
        timeout: 10s
        retries: 5


  dotnet-app:
    build:
      context: .
      dockerfile: Dockerfile.dotnet
      target: final
    ports:
      - "5000:8080"
    networks:
      - app-network
    depends_on:
      rabbit-sequoia-management:
        condition: service_healthy

  spring-boot-app:
    build:
      context: .
      dockerfile: ./rabbit-sequoia-spring/Dockerfile
    depends_on:
      - rabbit-sequoia-management
    environment:
      SPRING_RABBITMQ_HOST: rabbit-sequoia-management  # FIXED
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    ports:
      - "9000:8081"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge


